import java.lang.Math; import java.util.Scanner; public class Neighbours { public static void main(String[] args) {

     create();


 }


     public static void  create() 
     {   

int i = 0; 
int j=0 ;
int k=0 ;
//int n=0;


System.out.println("Enter the number of nodes");

Scanner scanner=new Scanner(System.in);
int m=scanner.nextInt();

double n=nodes(m)-1;
System.out.println("The returned value is"+n);

for ( i=0 ;i<=n;i++)
{
    //System.out.println(i);

    for (j=0 ; j<=n ;  j++)
    { 


          for(k=0 ;k<=n ; k++)
          {


              System.out.println("The Node is : "+i+","+j+","+k);



             Object[] neigh =  check(i,j,k,n);
             int[] neigh1 = (int[])neigh[0];
                int[] neigh2 =(int[])neigh[1];
                int[] neigh3 = (int[])neigh[2];
                int p = (int)neigh[3];
                for(int q=0;q<p;q++)
             {
                System.out.println(" "+neigh1[q]+""+neigh2[q]+""+neigh3[q]);



             }

          }
    }



}

}


 public static double nodes(int m)
 {
     //int n=0;
     return Math.cbrt(m);
 }


public static Object[] check(int a, int b, int c, double limit){

    Object[] neigh = new Object[4];
    int[] neigh1 = new int[6];
    int[] neigh2 =new int[6];
    int[] neigh3 = new int[6];
    int p=0;
    System.out.println("The Neighbours are ");



    if (a>0){
        neigh1[p]=a-1;
        neigh2[p]=b;
        neigh3[p]=c;
        //System.out.println(" "+};
        p++;
}
    if (a<limit){
        neigh1[p]=a+1;
        neigh2[p]=b;
        neigh3[p]=c;
        //System.out.println(" "+};
        p++;
}

    if (b>0){
        neigh1[p]=a;
        neigh2[p]=b-1;
        neigh3[p]=c;
        //System.out.println(" "+};
        p++;
}
    if (b<limit){
        neigh1[p]=a;
        neigh2[p]=b+1;
        neigh3[p]=c;
        //System.out.println(" "+};
        p++;
}

    if (c>0){
        neigh1[p]=a;
        neigh2[p]=b;
        neigh3[p]=c-1;
        //System.out.println(" "+};
        p++;
}
    if (c<limit){
        neigh1[p]=a;
        neigh2[p]=b;
        neigh3[p]=c+1;
        //System.out.println(" "+};
        p++;
}

neigh[0]=neigh1; neigh[1]=neigh2; neigh[2]=neigh3; neigh[3]=p;

return neigh;

}

}
